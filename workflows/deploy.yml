# .github/workflows/deploy.yml

# GitHub Actions workflow for automatic deployment with HTTPS

name: Deploy Crypto Bridge Bot

on:
push:
branches: [ main, production ]
pull_request:
branches: [ main ]

env:
NODE_VERSION: ‘18’

jobs:
test:
runs-on: ubuntu-latest

```
steps:
- name: Checkout code
  uses: actions/checkout@v4
  
- name: Setup Node.js
  uses: actions/setup-node@v4
  with:
    node-version: ${{ env.NODE_VERSION }}
    cache: 'npm'
    
- name: Install dependencies
  run: npm ci
  
- name: Run tests
  run: npm test
  
- name: Run security audit
  run: npm audit --audit-level moderate
```

deploy-railway:
needs: test
runs-on: ubuntu-latest
if: github.ref == ‘refs/heads/main’

```
steps:
- name: Checkout code
  uses: actions/checkout@v4
  
- name: Deploy to Railway
  uses: railway/gh-action@v1
  with:
    railway_token: ${{ secrets.RAILWAY_TOKEN }}
    service: crypto-bridge-bot
```

deploy-render:
needs: test
runs-on: ubuntu-latest
if: github.ref == ‘refs/heads/production’

```
steps:
- name: Checkout code
  uses: actions/checkout@v4
  
- name: Deploy to Render
  uses: johnbeynon/render-deploy-action@v0.0.8
  with:
    service-id: ${{ secrets.RENDER_SERVICE_ID }}
    api-key: ${{ secrets.RENDER_API_KEY }}
```

deploy-vps:
needs: test
runs-on: ubuntu-latest
if: github.ref == ‘refs/heads/production’

```
steps:
- name: Checkout code
  uses: actions/checkout@v4
  
- name: Deploy to VPS
  uses: appleboy/ssh-action@v0.1.5
  with:
    host: ${{ secrets.VPS_HOST }}
    username: ${{ secrets.VPS_USER }}
    key: ${{ secrets.VPS_SSH_KEY }}
    port: ${{ secrets.VPS_PORT }}
    script: |
      cd /opt/crypto-bridge-bot
      git pull origin production
      npm install --production
      pm2 reload crypto-bridge-bot
      pm2 save
```